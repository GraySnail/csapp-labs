                            | # Execution Begin
0x000:                      |         .pos 0
0x000: 30f40003000000000000 |         irmovq stack, %rsp
0x00a: 804800000000000000   |         call main
0x013: 00                   |         halt
                            | 
0x018:                      |         .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: b000000000000000     |         .quad 0x0b0
0x028: 000c000000000000     |         .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |         .quad 0x111
0x038: 2202000000000000     |         .quad 0x222
0x040: 3303000000000000     |         .quad 0x333
                            | 
                            | # Main function
0x048:                      | main:
0x048: 30f71800000000000000 |         irmovq src, %rdi
0x052: 30f63000000000000000 |         irmovq dest, %rsi
0x05c: 30f20300000000000000 |         irmovq $3, %rdx
                            | 
0x066: 807000000000000000   |         call copy_block
0x06f: 90                   |         ret
                            | 
                            | # long copy_block(long *src, long* desc, long len )
                            | # rdi, rsi, rdx
                            | # copy array
0x070:                      | copy_block:
0x070: 6300                 |         xorq %rax, %rax
0x072: 6222                 |         andq %rdx, %rdx
0x074: 74b200000000000000   |         jne test
0x07d: 90                   |         ret
0x07e:                      | loop:
0x07e: 50370000000000000000 |         mrmovq (%rdi), %rbx
0x088: 40360000000000000000 |         rmmovq %rbx, (%rsi)
0x092: c0f70800000000000000 |         iaddq $8, %rdi
0x09c: c0f60800000000000000 |         iaddq $8, %rsi
0x0a6: 6330                 |         xorq %rbx, %rax
0x0a8: c0f2ffffffffffffffff |         iaddq $-1, %rdx
                            | 
0x0b2:                      | test:
0x0b2: 747e00000000000000   |         jne loop
0x0bb: 90                   |         ret
                            | 
                            | # Stack starts
0x300:                      |         .pos 0x300
0x300:                      | stack:
